// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  email     String    @unique
  name      String
  hash      String
  hashedRT  String?
  comments  Comment[]
  role      Role      @default(USER)
  posts     Post[]
  profile   Profile?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("users")
}

model Profile {
  id     String @id @default(uuid()) @db.Uuid
  bio    String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("Profiles")
}

model Post {
  id          String              @id @default(uuid()) @db.Uuid
  title       String
  content     String
  published   Boolean
  publishDate DateTime            @default(now())
  author      User                @relation(fields: [authorId], references: [id])
  authorId    String
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  categories  CategoriesOnPosts[]
  comments    Comment[]

  @@map("Posts")
}

model Category {
  id    String              @id @default(uuid()) @db.Uuid
  name  String
  posts CategoriesOnPosts[]

  @@map("categories")
}

model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, categoryId])
  @@map("categoriesOnPosts")
}

model Comment {
  id       String @id @default(uuid()) @db.Uuid
  coment   String
  post     Post   @relation(fields: [postId], references: [id])
  postId   String
  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  @@map("comments")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}
